{"backend_state":"spawning","connection_file":"","kernel":"anaconda2019","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":133787648},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"19fcd9","input":"","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f98528","input":"","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"94bfdc","input":"import numpy as np","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"8000a3","input":"sw = sc1 + sc2","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"ea9ff7","input":"sb=n1*(media1-media).reshape(2,1).dot((media1-media).reshape(1,2)) +n2*(media2-media).reshape(2,1).dot((media2-media).reshape(1,2))\nsb","output":{"0":{"data":{"text/plain":"array([[ 73.03543735, -63.48921485],\n       [-63.48921485,  55.19074779]])"},"exec_count":11,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"59e254","input":"swsb=inv(sw).dot(sb)","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"1cc428","input":"swsb","output":{"0":{"data":{"text/plain":"array([[ 0.11184224, -0.09722371],\n       [-0.10568148,  0.0918682 ]])"},"exec_count":13,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"3a910e","input":"n1, n2 = 40, 30\nmu_vec1 = np.array([0,0])\ncov_mat1 = np.array([[1,0.1],[0.1,1]])\namostra1 = np.random.multivariate_normal(mu_vec1, cov_mat1, n1).T\n\n\nmu_vec2 = np.array([2,-2])\ncov_mat2 = np.array([[1,0.1],[0.1,1]])\namostra2 = np.random.multivariate_normal(mu_vec2, cov_mat2, n2).T\n","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"4b3acd","input":"%pylab inline\nfrom matplotlib import pyplot as plt\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Populating the interactive namespace from numpy and matplotlib\n"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"22d77b","input":"valprop, vect_prop = np.linalg.eig(swsb)","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"18c569","input":"valprop","output":{"0":{"data":{"text/plain":"array([ 2.03710434e-01, -2.77555756e-17])"},"exec_count":33,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"144bea","input":"vect_prop","output":{"0":{"data":{"text/plain":"array([[ 0.72684218,  0.65606184],\n       [-0.68680452,  0.75470714]])"},"exec_count":34,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"65f226","input":"vect_prop[:,0].reshape(1,2).dot(sw.dot(vect_prop[:,1].reshape(2,1)))","output":{"0":{"data":{"text/plain":"array([[0.]])"},"exec_count":35,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"d9465e","input":"valprop","output":{"0":{"data":{"text/plain":"array([ 2.03710434e-01, -2.77555756e-17])"},"exec_count":36,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"5bca45","input":"w=vect_prop[:,0].reshape(2,1)","pos":18,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"1a4939","input":"fig = plt.figure(figsize=(12,12))\nax = fig.add_subplot(111)\nplt.rcParams['legend.fontsize'] = 10   \nax.plot(amostra1[0,:], amostra1[1,:], 'o', markersize=8, color='blue', alpha=0.5, label='amostra1')\nax.plot(amostra2[0,:], amostra2[1,:], 'x', markersize=8, alpha=0.5, color='red', label='amostra2')\n\nax.legend(loc='lower right')\nplt.show()","output":{"0":{"data":{"image/png":"778494fbcb69e6f9d32a2f44ced8c098cafc1443","text/plain":"<Figure size 864x864 with 1 Axes>"},"exec_count":4,"metadata":{"image/png":{"height":683,"width":705},"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"c324a2","input":"w","output":{"0":{"data":{"text/plain":"array([[ 0.72684218],\n       [-0.68680452]])"},"exec_count":40,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"352b9d","input":"proj1 = (w.T).dot(amostra1)\nproj2 = (w.T).dot(amostra2)","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"ee4808","input":"fig = plt.figure(figsize=(12,12))\nax = fig.add_subplot(111)\nplt.rcParams['legend.fontsize'] = 10   \n \nax.plot(proj1, 'o', markersize=8, alpha=0.5, color='blue')\nax.plot(proj2, 'o', markersize=8, alpha=0.5, color='red')\n\nplt.show()\n\n","output":{"0":{"data":{"image/png":"058873b1a72661611af4c19edebef2ac0a854b88","text/plain":"<Figure size 864x864 with 1 Axes>"},"exec_count":42,"metadata":{"image/png":{"height":683,"width":705},"needs_background":"light"},"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"7041fb","input":"media1 = np.mean(amostra1,1)\nmedia2 = np.mean(amostra2,1)","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"7e17b8","input":"media1, media2","output":{"0":{"data":{"text/plain":"(array([-0.06766375, -0.3189165 ]), array([ 1.99641002, -2.11320195]))"},"exec_count":6,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b03eb0","input":"amostra = np.concatenate((amostra1, amostra2), axis=1)\nmedia=np.mean(amostra, 1)\nmedia","output":{"0":{"data":{"text/plain":"array([ 0.8169393 , -1.08789598])"},"exec_count":7,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"d545a7","input":"sc1 = np.zeros((2,2))\nfor i in range(amostra1.shape[1]):\n    sc1 += (amostra1[:,i].reshape(2,1) - media1).dot((amostra1[:,i].reshape(2,1) - media1).T)\nprint('Scatter Matrix S1:\\n', sc1)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Scatter Matrix S1:\n [[79.22941614  8.42035976]\n [ 8.42035976 55.39260637]]\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"4e9459","input":"sc2 = np.zeros((2,2))\nfor i in range(amostra2.shape[1]):\n    sc2 += (amostra2[:,i].reshape(2,1) - media2).dot((amostra2[:,i].reshape(2,1) - media2).T)\nprint('Scatter Matrix S2:\\n', sc2)","output":{"0":{"name":"stdout","output_type":"stream","text":"Scatter Matrix S2:\n [[592.61055198  11.49465208]\n [ 11.49465208 566.44347296]]\n"}},"pos":8,"type":"cell"}
{"id":0,"time":1606983327685,"type":"user"}
{"last_load":1606983315698,"type":"file"}