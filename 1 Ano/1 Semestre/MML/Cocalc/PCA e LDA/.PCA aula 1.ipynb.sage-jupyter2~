{"backend_state":"running","kernel":"anaconda5","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":76787712},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"697dea","input":"","pos":58,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6e72c4","input":"","pos":57,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7a5ab8","input":"","pos":56,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"855deb","input":"print('Matriz de covariância:\\n', cov_mat)\nprint('Matriz de covariância amostral:\\n', mat_cov)\nprint('Matriz de dispersão:\\n', mat_cov*amostra.shape[1])","output":{"0":{"name":"stdout","output_type":"stream","text":"Matriz de covariância:\n [[1.  0.8]\n [0.8 1. ]]\nMatriz de covariância amostral:\n [[0.88242162 0.67414478]\n [0.67414478 0.89116953]]\nMatriz de dispersão:\n [[441.21080794 337.07239112]\n [337.07239112 445.58476562]]\n"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"4922ed","input":"# vectores e valores proprios da scatter matrix \nvalprop_sc, vect_prop_sc = np.linalg.eig(scatter_matrix)\n\n# vectores e valores proprios da matriz covariancia (amostral)\nvalprop_cov, vect_prop_cov = np.linalg.eig(mat_cov)\n","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"2ded9f","input":"valprop_sc","output":{"0":{"data":{"text/plain":"array([106.1056644 , 778.91631801])"},"exec_count":12,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"1341b2","input":"valprop_cov","output":{"0":{"data":{"text/plain":"array([0.2126366 , 1.56095455])"},"exec_count":13,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"54b8f6","input":"idx = valprop_sc.argsort()[::-1]\nvalprop_sc = valprop_sc[idx]\nvect_prop_sc = vect_prop_sc[:,idx]","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"7e071c","input":"mu_vec = np.array([0,0])\ncov_mat = np.array([[1,0.8],[0.8,1]])\namostra = np.random.multivariate_normal(mu_vec, cov_mat, 500).T","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"33e837","input":"scatter_matrix = np.zeros((2,2))\nprint(amostra[:,5]).reshape(2,1))\nfor i in range(amostra.shape[1]):\n    scatter_matrix += (amostra[:,i].reshape(2,1) - vector_media).dot((amostra[:,i].reshape(2,1) - vector_media).T)\nprint('Scatter Matrix:\\n', scatter_matrix)\n#Esta não é a matriz de covariancia, é a outra","output":{"0":{"name":"stdout","output_type":"stream","text":"[ 0.31356058 -0.05285432]\nScatter Matrix:\n [[454.16318279 363.59433182]\n [363.59433182 466.77303982]]\n"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"8089e4","input":"valprop_sc","output":{"0":{"data":{"text/plain":"array([778.91631801, 106.1056644 ])"},"exec_count":15,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"232e34","input":"vect_prop_sc","output":{"0":{"data":{"text/plain":"array([[-0.70480919, -0.70939693],\n       [-0.70939693,  0.70480919]])"},"exec_count":16,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"79933a","input":"idx = valprop_cov.argsort()[::-1]\nvalprop_cov = valprop_cov[idx]\nvect_prop_cov = vect_prop_cov[:,idx]","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"ce96c0","input":"vect_prop_cov","output":{"0":{"data":{"text/plain":"array([[-0.70480919, -0.70939693],\n       [-0.70939693,  0.70480919]])"},"exec_count":18,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"cd999f","input":"vect_prop_sc","output":{"0":{"data":{"text/plain":"array([[-0.70480919, -0.70939693],\n       [-0.70939693,  0.70480919]])"},"exec_count":19,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"ba55b6","input":"import numpy as np\nimport numpy.linalg as linalg","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"37782e","input":"print(np.trace(amostra))","output":{"0":{"name":"stdout","output_type":"stream","text":"0.15581344972297917\n"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"3361ac","input":"valprop_sc[0]/valprop_cov[0], valprop_sc[1]/valprop_cov[1]","output":{"0":{"data":{"text/plain":"(498.99999999999994, 499.00000000000193)"},"exec_count":21,"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"ad4f83","input":"traco_cov=np.trace(mat_cov)\ntraco_sc=np.trace(scatter_matrix)\ntraco_sc/traco_cov","output":{"0":{"data":{"text/plain":"499.0000000000001"},"exec_count":22,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"303a0b","input":"valprop_cov[0]/traco_cov","output":{"0":{"data":{"text/plain":"0.8801095718427983"},"exec_count":23,"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"7efb03","input":"w=vect_prop_sc[:,0]\nw","output":{"0":{"data":{"text/plain":"array([-0.70480919, -0.70939693])"},"exec_count":24,"output_type":"execute_result"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"af6bb9","input":"%pylab inline\nfrom matplotlib import pyplot as plt","output":{"0":{"name":"stdout","output_type":"stream","text":"Populating the interactive namespace from numpy and matplotlib\n"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"3a4d77","input":"plt.figure(figsize=(10,10))\nplt.plot(amostra[0], amostra[1], 'x')\nplt.axis('equal')\nplt.show()","output":{"0":{"data":{"image/png":"7010c045c23fe506bcf08b70bef9d3e7638ccada","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":4,"metadata":{"image/png":{"height":576,"width":595},"needs_background":"light"},"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"ea0c13","input":"plt.figure(figsize=(10,10))\nplt.plot(amostra[0], amostra[1], 'x')\nplt.plot(amostra_proj[0], amostra_proj[1], 'o')\nplt.axis('equal')\nplt.show()","output":{"0":{"data":{"image/png":"1d781e10de5b7800a86be8421215effa5c8706cc","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":40,"metadata":{"image/png":{"height":576,"width":595},"needs_background":"light"},"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"355447","input":"mu_vec = np.array([0,0])\ncov_mat = np.array([[1,0],[0,1]])\namostra = np.random.multivariate_normal(mu_vec, cov_mat, 500).T","pos":49,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"8aff1b","input":"plt.figure(figsize=(10,10))\nplt.plot(amostra[0], amostra[1], 'x')\nplt.axis('equal')\nplt.show()","output":{"0":{"data":{"image/png":"b65c60559bdb2e1f29d2de9e59d2ce047c433be7","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":42,"metadata":{"image/png":{"height":576,"width":595},"needs_background":"light"},"output_type":"execute_result"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"9415b3","input":"mat_cov = np.cov([amostra[0,:],amostra[1,:]])","pos":51,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"ac7f0d","input":"valprop_cov, _ = np.linalg.eig(mat_cov)","pos":52,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"cb3a7c","input":"idx = valprop_cov.argsort()[::-1]\nvalprop_cov = valprop_cov[idx]","pos":53,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"f1356b","input":"valprop_cov","output":{"0":{"data":{"text/plain":"array([1.05386201, 0.97679002])"},"exec_count":46,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"d6935d","input":"traco_cov=np.trace(mat_cov)\nvalprop_cov[0]/traco_cov","output":{"0":{"data":{"text/plain":"0.5189771551799829"},"exec_count":47,"output_type":"execute_result"}},"pos":55,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"62a19e","input":"norm(w)","output":{"0":{"data":{"text/plain":"0.9999999999999999"},"exec_count":53,"output_type":"execute_result"}},"pos":35,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"70a9e2","input":"declive=w[1]/w[0]","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"42cf55","input":"declive","output":{"0":{"data":{"text/plain":"0.9576284095752454"},"exec_count":55,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"da30b0","input":"plt.figure(figsize=(10,10))\nplt.plot(amostra[0], amostra[1], 'x')\nt = np.arange(-4, 4, 0.2)\nplt.plot(t, declive*t, 'r--')\nplt.axis('equal')\nplt.show()","output":{"0":{"data":{"image/png":"94e5a5695148809f2af3e38cae91ba1faa88fe97","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":56,"metadata":{"image/png":{"height":577,"width":595},"needs_background":"light"},"output_type":"execute_result"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"82d7c9","input":"amostraT=amostra.T","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"c64624","input":"amostraT.shape","output":{"0":{"data":{"text/plain":"(500, 2)"},"exec_count":58,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"47ab8d","input":"prod_inter=amostraT.dot(w)\nprint(prod_inter.shape)","output":{"0":{"name":"stdout","output_type":"stream","text":"(500,)\n"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"99049a","input":"print(amostra.shape)\nmedia_x = np.mean(amostra[0,:])\nmedia_y = np.mean(amostra[1,:])\nprint(media_x)\nprint(media_y)","output":{"0":{"name":"stdout","output_type":"stream","text":"(2, 500)\n0.014839717154810557\n0.05415503610860811\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"067ac1","input":"amostra_proj=numpy.zeros(shape=(2,len(amostra[1])))","pos":44,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"1867f8","input":"vector_media","output":{"0":{"data":{"text/plain":"array([[ 0.02218296],\n       [-0.01282624]])"},"exec_count":7,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b5e44c","input":"vector_media = np.array([[media_x],[media_y]])","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":71,"id":"d0cb31","input":"for i in range(len(amostra[1])):\n    amostra_proj[:,i]=prod_inter[i]*w;\n    \nprint(prod_inter[0]*w)","output":{"0":{"name":"stdout","output_type":"stream","text":"[-0.65432182 -0.62659717]\n"}},"pos":45,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"ff0eb0","input":"mat_cov = np.cov([amostra[0,:],amostra[1,:]])","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"073a9b","input":"Resta-nos fazer a projecção de cada elemento no espaço gerado por $w$, vector próprio da matriz associado ao maior valor próprio.","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"0ddfe7","input":"Comparemos os valores próprios da matriz de dispersão e de covariância, e os respectivos vectores próprios. Note que temos que calcular a matriz de covariância relativa à amostra!","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"12e6bf","input":"Infelizmente os valores próprios não são apresentados por ordem...\nhttps://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.linalg.eig.html","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"364bc4","input":"Note-se que apesar de se ter gerado aleatoriamente amostras centradas em (0,0), a média amostral pode não ser (0,0)!","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"37e702","input":"Como é de esperar, a soma dos valores próprios de cada uma das matrizes, que iguala o traço (soma dos elementos diagonais) da respectiva matriz, terão a mesma razão.","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"3f5c7a","input":"Tal como previsto, têm os mesmos vectores próprios de norma igual a 1. E sobre os valores próprios, a razão é $n-1$ onde $n$ é o tamanho da amostra.","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"4e45f6","input":"Construímos a matriz amostra_proj que cujas colunas são as projecções das respectivas amostras em $< w >$.","pos":46,"type":"cell"}
{"cell_type":"markdown","id":"5139c2","input":"Façamos agora um exercício que mostre que nem sempre é possível (ou aconselhável) aplicar o PCA. Neste caso, não existe uma direcção para a qual a variância seja maior.","pos":48,"type":"cell"}
{"cell_type":"markdown","id":"5d29f7","input":"Vamos agora \"re-centrar\" os dados e calcular a matriz de dispersão, scatter matrix:","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"61cd0c","input":"O vector prod_inter contém os productos internos das amostras com o vector $w$.","pos":43,"type":"cell"}
{"cell_type":"markdown","id":"71e29a","input":"Cerca de 90% da informação está \"contida\" na direcção do vector próprio associado ao maior valor próprio. Ou seja, aparenta ser boa ideia reduzir de 2 para 1 dimensão.","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"7530f3","input":"Visualização dos dados:","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"76f448","input":"Vamos gerar amostras aleatórias, seguindo a lei normal e à custa de uma matriz de covariância dada para o efeito.","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"7e0c15","input":"Para estudo de grandeza de algum dos valores próprios em relação aos restantes (neste caso em particular só temos 2 valores proprios), vamos ver qual a razão entre o maior valor próprio (ou os maiores), em relação à soma de todos os valores próprios (que iguala o traço). Como vimos, e tratando-se de uma razão, é irrelevante usar a matriz de covariância ou a de dispersão scatter_matrix.","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"b32832","input":"Façamos o mesmo para a matriz de covariância:","pos":22,"type":"cell"}
{"id":0,"time":1576711727555,"type":"user"}
{"last_load":1576693718225,"type":"file"}